Домашнее задание
Генерация адаптеров по интерфейсу

Цель:


Описание/Пошаговая инструкция выполнения домашнего задания:
Предположим, что у нас есть интерфейс
interface Tank.Operations.IMovable {
    Vector getPosition();
    Vector setPosition(Vector newValue);
    Vector getVelocity();
}

Необходимо по нему сгенерировать следующий класс:

class AutoGenerated.MovableAdapter: Tank.Operations.IMovable {
    UObject obj;

    public MovableAdapter(UObject obj) {
        this.obj = obj;
    }
    public Vector getPosition() {
        return IoC.Resolve("Tank.Operations.IMovable:position.get", obj);
    }

    public Vector getVelocity() {
        return IoC.Resolve("Tank.Operations.IMovable:velocity.get", obj);
    }
    public Vector setPosition(Vector newValue) {
        return IoC.Resolve("Tank.Operations.IMovable:position.set", obj, newValue);
    }
}

так, чтобы можно было создавать экземпляры этого класса.

Экземпляры генерируемых оберток для объекта obj можно создавать следующей строкой:
var adapter = IoC.Resolve("Adapter", typeof(IMovable), obj);

3*. Необязательная задача на подумать: если интерфейсе потребуются какие-либо методы, например, как interface Tank.Operations.IMovable { Vector getPosition(); Vector setPosition(Vector newValue); Vector getVelocity(); void finish(); }

Придумать реализацию адаптера для подобных методов.
Критерии оценки:
Критерии оценки:

Задание сдано на проверку - 2 балла
Реализован генератор адаптеров - 5 баллов
Реализованы тесты на генератор адаптеров - 3 балла
Определена стратегия для IoC из п. 2 задания - 5 баллов
Обработан случай из п. 3 задания - 5 баллов минимальное количество баллов, которое необходимо набрать - 12 баллов