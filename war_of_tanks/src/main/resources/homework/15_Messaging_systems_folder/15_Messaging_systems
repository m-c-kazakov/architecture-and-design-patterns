Домашнее задание
Написать Endpoint для приема входящих сообщений

Цель:
Написать Endpoint для приема входящих сообщений Игровым сервером.
Термины:
Игровой сервер - это приложение, на котором вычисляется состояние танковых боев, то есть выполняются все те команды, которые рассматривались на предыдущих занятиях.
Агент - это специальное приложение, на котором игрок запускает свой алгоритм управления своей командой танков.

Для полноценной реализации игры необходимо обеспечить двусторонний обмен данными между Игровым сервером и Агентами. Частью такого обмена будет Endpoint для приема входящих сообщений Игорвым сервером.
В результате выполнения ДЗ будет получен код, основанный на паттернах системы обмена сообщениями для приема входящих сообщений от Агентов.
Цель: применить навыки построения архитектуры, основанной на системе обмена сообщениями.

Описание/Пошаговая инструкция выполнения домашнего задания:
Задача Endpoint принять входящее сообщение от Агента

А вот определить какому из танковых боев это сообщение было адресовано (маршрутизация) и его уведомление о входящем сообщении (передача сообщения в обработку) - это то, что придется делать в рамках этого ДЗ.

Шаги выполнения ДЗ:
1) Определить формат сообщений, которые отправляет Агент игровому серверу.
Поля:
id игры - для идентификации игры, в рамках которой это сообщение обработано. С помощью этого id можно будет определить получателя сообщения при маршрутизации сообщения внутри игрового сервера.
id игрового объекта, которому адресовано сообщение. С помощью этого id можно будет определить игровой объект внутри игры, для которого адресовано это сообщение.
id операции - по этому id в IoC можно будет определить команду, которая будет обрабатывать данное сообщение.
args - вложенный json объект с параметрами операции. Содержимое этого объекта полностью зависит от команды, которая будет применяться к игровому объекту.

2) Определить endpoint, который принимает входящее сообщение и конвертирует в команду InterpretCommand.
enpoint должен определить игру, которой адресовано сообщение, создать команду InterpretCommand и поместить эту команду в очередь команд этой игры.

Команда InterpretCommand получает всю информацию об операции, которую необходимо выполнить, параметрах и объекте, над которым эта операция будет выполняться.

Задача команды InterpretCommand на основе IoC контейнера создать команду для нужного объекта, которая которая соответствует приказу, содержащемуся в сообщении и постановки этой команды в очередь команд игры.

Например, если сообщение указано, что объект с id 548 должен начать двигаться, то результат InterpretCommand заключается можно описать следующим псевдокодом var obj = IoC.Resolve("Игровые объекты", "548");
// "548" получено из входящего сообщения IoC.Resolve("Установить начальное значение скорости", obj, 2);
// значение 2 получено из args переданного в сообщении var cmd = IoC.Resolve("Движение по прямой", obj);
// Решение, что нужно выполнить движение по прямой получено из сообщения
// обратите внимание само значение "Движение по прямой" нельзя читать на прямую из сообщения,
// чтобы избежать инъекции, когда пользователь попытается выполнить действие, которое ему выполнять не позволено IoC.Resolve("Очередь команд", cmd).Execute();
// Выполняем команду, которая поместит команду cmd в очередь команд игры.


Критерии оценки:
Задача сдана на проверку - 1 балл.
Код компилируется без ошибок, тесты выполняются успешно. - 1 балл
Настроен CI, по которому можно определить успешность п. 2 - 2 балла
Описан формат сообщения 1 балл 2 балла - формат сообщения универсален и удовлетворяет SOLID (принимается, если преподаватель может придумать контрпример, который приводит к изменению формата)
Реализован endpoint, который вычисляет игру и ставит команду в очередь игры 1 балл 2 балла - если реализация endpoint эффективна, то есть не использует лишние блокировки и примитивы синхронизации, не имеет race conditions.
Реализована Interpret Command 1 балл 2 балла - если удовлетворяет SOLID (принимается, если преподаватель может придумать контрпример, который приводит к изменению кода команды) Максимальная оценка за задание 10 баллов. Задание принимается, если было оценено не менее, чем в 7 баллов.